import io.restassured.RestAssured;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

import java.util.UUID;

import static io.restassured.RestAssured.with;

/**
 * Add your test cases here to test that the Employee API endpoints are all working properly.

COVERAGE
Create
Edit
Delete
Performance
Load/stress
Threshold

REQUIREMENTS
No duped email addresses
Unique email addresses
Id is unique
Name and title are editable

FUNCTIONS - HAPPY PATH
Create | Unique email | curl -x PUT "Content-Type: application/json -d "jon.smith" + UUID.randomUUID() + "@example.com"; "X-API-KEY: 41ce3d6c-1a01-4ba8-8edc-0224229e5136" \https://assessments.codescreen.com/api/employees
Create | Unique ID created | 
Create | Name | curl -H "Content-Type: application/json -d "{\"name\": \"Kat Collins\"}" "X-API-KEY: 41ce3d6c-1a01-4ba8-8edc-0224229e5136" \https://assessments.codescreen.com/api/employees
Create | Title |
Edit | Name |
Edit | Title 
Delete |

NEGATIVE
Create | dupe email 
Create | blank email
Create | blank name
Create | blank title
Create | additional “non-existing” data end points
Edit | dupe name
Edit | dupe title
Create | ID value given
Create | ID dupe

THRESHOLD
Create | Unique email | unique characters
Create | Unique email | improper format
Create | Unique email | over character count limit
Create | name | unique characters
Create | name | over character count limit
Create | title | unique characters
Create | title | over character count limit
Edit | Unique email | unique characters
Edit | Unique email | improper format
Edit | Unique email | over character count limit
Edit | name | unique characters
Edit | name | over character count limit
Edit | title | unique characters
Edit | title | over character count limit

PERFORMANCE
curl --limit-rate 1m -0 -H "X-API-KEY: 41ce3d6c-1a01-4ba8-8edc-0224229e5136" \https://assessments.codescreen.com/api/employees

LOAD AND STRESS TESTING

 *
 * We provide one test case below to show you how to authenticate with the API and use the Rest Asssured library.
 */

@Order(1) //Do not edit the value of this Order annotation.
public class EmployeeAPITest {

  private static final String API_KEY = "41ce3d6c-1a01-4ba8-8edc-0224229e5136";

  @BeforeAll
  static void setup() {
    RestAssured.baseURI = "https://assessments.codescreen.com/api/employees";
  }

  @Test
  public void testCreate() {
    String email = "jon.smith" + UUID.randomUUID() + "@example.com";
    with().body(new Employee(email, "Jon Smith", "Software Developer"))
            .header("X-API-KEY", API_KEY)
            .when()
            .request("POST")
            .then()
            .statusCode(201);
  }

  private static class Employee {
    private String email;
    private String name;
    private String title;

    public Employee(String email, String name, String title) {
      this.email = email;
      this.name = name;
      this.title = title;
    }

    public String getEmail() {
      return email;
    }

    public String getName() {
      return name;
    }

    public String getTitle() {
      return title;
    }

  }

}

@Interview Test Response
public class EmployeeAPITest {

  private static final String API_KEY = "41ce3d6c-1a01-4ba8-8edc-0224229e5136";

  @BeforeAll
  static void setup() {
    RestAssured.baseURI = "https://assessments.codescreen.com/api/employees";
  }

  @Test
  public void testCreate() {
    String email = "kat_collins" + UUID.randomUUID() + "@example.com";
    with().body(new Employee(email, "Kat Collins", "Senior QE Analyst"))
            .header("X-API-KEY", API_KEY)
            .when()
            .request("POST")
            .then()
            .statusCode(201);
  }

  private static class Employee {
    private String email;
    private String name;
    private String title;

    public Employee(String email, String name, String title) {
      this.email = email;
      this.name = name;
      this.title = title;
    }

    public String getEmail() {
      return email;
    }

    public String getName() {
      return name;
    }

    public String getTitle() {
      return title;
    }

  }

}
